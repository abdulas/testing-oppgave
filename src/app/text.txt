test('Quiz ends when all questions are answered', () => {
  const { getByText, queryByText } = render(<Quiz />);
  const answerButtons = document.querySelectorAll('li'); // Finn alle svaralternativer
  answerButtons.forEach((button) => {
    fireEvent.click(button);
  });
  const questionText = queryByText('Spørsmål 1:'); // Endre dette basert på hvordan spørsmålene vises
  expect(questionText).not.toBeInTheDocument();
});




test('Viser spørsmål riktig', () => {
  const { getByText } = render(<Quiz />);
  const questionTitle = getByText(data.questions[0].title);
  expect(questionTitle).toBeInTheDocument();
});


test('Viser svaralternativer riktig', () => {
  const { getAllByRole } = render(<Quiz />);
  const answerOptions = getAllByRole('listitem');
  expect(answerOptions).toHaveLength(data.questions[0].answers.length);
});


test('Riktig svar gir poeng', () => {
  const { getByText } = render(<Quiz />);
  const correctAnswer = getByText(data.questions[0].answers[0].answer);
  fireEvent.click(correctAnswer);
  const poengElement = getByText('1');
  expect(poengElement).toBeInTheDocument();
});


test('Fullføring av quizen viser riktig sluttresultat', () => {
  const { getByText } = render(<Quiz />);
  // Simuler fullføring av quizen her...
  const gratulererElement = getByText('Gratulerer');
  expect(gratulererElement).toBeInTheDocument();
});


test('Tilbakestilling av quizen nullstiller poeng og spørsmål', () => {
  const { getByText, getByRole } = render(<Quiz />);
  // Simuler fullføring av quizen og tilbakestilling her...
  const poengElement = getByText('0');
  const restartButton = getByRole('button', { name: 'Ta quizen på nytt' });
  expect(poengElement).toBeInTheDocument();
  expect(restartButton).toBeInTheDocument();
});